"use client"

import { useEffect } from "react"

import { useAuthStore } from "@/stores/useAuthStore"
import { CurrentUserResponse, UserAttributes } from "@/types/User"
import { getAuthToken } from "@/utils/auth"
import { useApiQuery } from "@/utils/hooks/use-api"

interface AuthProviderProps {
  children: React.ReactNode
}

/**
 * –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ cookies –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
 */
export const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {
  const { login, logout, isAuthenticated } = useAuthStore()
  const token = getAuthToken()

  // –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–∫–µ–Ω–∞
  const { data: currentUserData, error: currentUserError } =
    useApiQuery<CurrentUserResponse>(
      ["currentUser"],
      "api/proxy/users/get-current",
      {
        enabled: !!token && !isAuthenticated, // –ó–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –Ω–æ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        staleTime: 5 * 60 * 1000,
        gcTime: 10 * 60 * 1000,
      }
    )

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ cookies –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if (token) {
      if (currentUserData?.attributes) {
        login(token, currentUserData.attributes)
      } else if (!isAuthenticated) {
        login(token, {} as UserAttributes) // –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      }
    } else {
      logout()
    }
  }, [token, currentUserData, login, logout, isAuthenticated])

  // // –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  // useEffect(() => {
  //   if (currentUserData) {
  //     console.log("üë§ –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", currentUserData)
  //   }
  //   if (currentUserError) {
  //     console.error(
  //       "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
  //       currentUserError
  //     )
  //   }
  // }, [currentUserData, currentUserError])

  return <>{children}</>
}
